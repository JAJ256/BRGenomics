% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ndimensional_binning.R
\name{binNdimensions}
\alias{binNdimensions}
\title{N-dimensional binning of data by quantiles}
\usage{
binNdimensions(..., quantiles = 10)
}
\arguments{
\item{...}{A single dataframe, or any number of lists or vectors containing
different measurements across the same datapoints. If a dataframe is given,
columns should correspond to measurements (dimensions). If lists or
vectors are given, they must all have the same lengths. Other input classes
will be coerced into a single dataframe.}

\item{quantiles}{Either a number giving the number of quantiles to use for
all dimensions (default = 10), or a vector containing the number of
quantiles to use for each dimension of input data given.}
}
\value{
A dataframe containing indices in \code{1:quantiles} for each
  datapoint in each dimension.
}
\description{
This function takes in data along 1 or more dimensions, and for each
dimension the data is divided into evenly-sized quantiles from the minimum
value to the maximum value, and bin numbers are returned. For instance, if
each index of the input data were a gene, the input dimensions would be
various quantitative measures of that gene, e.g. expression level, number of
exons, length, etc. If plotted in cartesian coordinates, each gene would be a
single datapoint, and each measurement would be a separate dimension. The bin
numbers for each datapoint in each dimension are returned in a dataframe,
with a column for each dimension and a row for each index.
}
\examples{
data("PROseq") # import included PROseq data
data("txs_dm6_chr4") # import included transcripts

#--------------------------------------------------#
# find counts in promoter, early genebody, and near CPS
#--------------------------------------------------#

pr <- promoters(txs_dm6_chr4, 0, 100)
early_gb <- genebodies(txs_dm6_chr4, 500, 1000, fix.end = "start")
cps <- genebodies(txs_dm6_chr4, -500, 500, fix.start = "end")

counts_pr <- getCountsByRegions(PROseq, pr)
counts_gb <- getCountsByRegions(PROseq, early_gb)
counts_cps <- getCountsByRegions(PROseq, cps)

#--------------------------------------------------#
# divide genes into 20 quantiles for each measurement
#--------------------------------------------------#

count_quantiles <- binNdimensions(counts_pr, counts_gb, counts_cps,
                                  quantiles = 20)

length(txs_dm6_chr4)
nrow(count_quantiles)
count_quantiles[1:10, ]
}
\author{
Mike DeBerardine
}
