% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataset_functions.R
\name{mergeReplicates}
\alias{mergeReplicates}
\title{Merge replicates of basepair-resolution GRanges objects}
\usage{
mergeReplicates(
  ...,
  field = "score",
  sample_names = NULL,
  makeBRG = TRUE,
  exact_overlaps = FALSE,
  ncores = getOption("mc.cores", 2L)
)
}
\arguments{
\item{...}{Either a list of GRanges objects, or any number of GRanges objects
(see \code{\link[BRGenomics:mergeGRangesData]{mergeGRangesData}}). However,
the names of the datasets must end in \code{"_rep#"}, where "#" is one or
more characters indicating the replicate.}

\item{field}{The metadata field that contains count information for each
range. \code{length(field)} should either be 1, or equal to the number of
datasets.}

\item{sample_names}{Optional character vector with which to rename the
datasets. This is useful if the sample names do not conform to the "_rep"
naming scheme.}

\item{makeBRG, exact_overlaps}{See \code{\link[BRGenomics:mergeGRangesData]{
mergeGRangesData}}.}

\item{ncores}{The number of cores to use. This function will try to maximize
the use of the \code{ncores} given, but care should be taken as
\code{mergeGRangesData} can be memory intensive. Excessive memory usage can
cause dramatic reductions in performance.}
}
\value{
A list of GRanges objects.
}
\description{
This simple convenience function uses
\code{\link[BRGenomics:mergeGRangesData]{ mergeGRangesData}} to combine
replicates (e.g. biological replicates) of basepair-resolution GRanges
objects.
}
\examples{
data("PROseq")
ps_list <- list(a_rep1 = PROseq[seq(1, length(PROseq), 4)],
                b_rep1 = PROseq[seq(2, length(PROseq), 4)],
                a_rep2 = PROseq[seq(3, length(PROseq), 4)],
                b_rep2 = PROseq[seq(4, length(PROseq), 4)])
mergeReplicates(ps_list, ncores = 1)
}
