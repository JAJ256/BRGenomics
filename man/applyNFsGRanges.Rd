% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalization.R
\name{applyNFsGRanges}
\alias{applyNFsGRanges}
\title{Apply normalization factors to GRanges object}
\usage{
applyNFsGRanges(dataset.gr, NF, field = "score", ncores = detectCores())
}
\arguments{
\item{dataset.gr}{A GRanges object with signal data in one or more metadata
fields, or a list of such GRanges objects.}

\item{NF}{One or more normalization factors to apply by multiplication. The
number of normalization factors should match the number of datasets in
\code{dataset.gr}.}

\item{field}{The metadata field(s) in \code{dataset.gr} that contain signal
to be normalized.}

\item{ncores}{The number of cores to use for computations. Multicore only
used if there are multiple datasets present.}
}
\value{
A GRanges object, or a list of GRanges objects.
}
\description{
Convenience function for multiplying signal counts in one or more GRanges
object by their normalization factors.
}
\examples{
# Apply NFs to a single GRanges
gr <- GRanges(seqnames = "chr1",
              ranges = IRanges(1:3, 3:5),
              strand = c("+", "+", "-"),
              score = c(2, 3, 4))
gr

applyNFsGRanges(gr, NF = 0.5, ncores = 1)

# Apply NFs to a list of GRanges
gr2 <- gr
ranges(gr2) <- IRanges(4:6, 5:7)
grl <- list(gr, gr2)
grl

applyNFsGRanges(grl, NF = c(0.5, 0.75))

# Apply NFs to a multiplexed GRanges
gr_multi <- gr
names(mcols(gr_multi)) <- "gr1"
gr_multi$gr2 <- c(3, 5, 7)
gr_multi

applyNFsGRanges(gr_multi, NF = c(2, 3), field = c("gr1", "gr2"))
}
\seealso{
\code{\link[BRGenomics:getSpikeInNFs]{getSpikeInNFs}}
}
\author{
Mike DeBerardine
}
