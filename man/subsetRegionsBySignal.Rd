% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roi_functions.R
\name{subsetRegionsBySignal}
\alias{subsetRegionsBySignal}
\title{Subset regions of interest by quantiles of overlapping signal}
\usage{
subsetRegionsBySignal(
  regions.gr,
  dataset.gr,
  quantiles = c(0.5, 1),
  field = "score",
  order.by.rank = FALSE,
  density = FALSE
)
}
\arguments{
\item{regions.gr}{A GRanges object containing regions of interest.}

\item{dataset.gr}{A GRanges object in which signal is contained in metadata
(typically in the "score" field).}

\item{quantiles}{A value pair giving the lower quantile and upper quantile of
regions to keep. Regions with signal quantiles below than the lower
quantile are removed, while regions with signal quantiles above the upper
quantile are removed. Quantiles must be in range \code{(0, 1)}. An empty
GRanges object is returned if \code{lower quantile = 1} or \code{upper
quantile = 0}.}

\item{field}{The metadata field of \code{dataset.gr} to be counted.}

\item{order.by.rank}{If \code{TRUE}, the output regions are sorted based on
the amount of signal contained (in decreasing order). If \code{FALSE} (the
default), genes are sorted by their positions.}

\item{density}{A logical indicating whether signal counts should be
normalized to the width of ranges in \code{regions.gr}. By default, the
function only considers the total signal in each range.}
}
\value{
A GRanges object of length \code{length(regions.gr) * (upper_quantile
  - lower_quantile)}.
}
\description{
A convenience function to subset regions of interest by the
  amount of signal they contain, according to their quantile (i.e. their
  signal ranks).
}
\details{
Typical uses may include removing the 5% of genes with the lowest
  signal (\code{lower_quantile = 0.05}) and the 5% with the highest signal
  (\code{upper_quantile = 0.95}), or returning the middle 50% of genes by
  signal (\code{lower_quantile = 0.25}, \code{upper_quantile = 0.75}). If
  \code{lower_quantile = 0} and \code{upper_quantile = 1}, all regions are
  returned, but the returned regions will be sorted by position, or by score
  if \code{order.by.rank = TRUE}.
}
\examples{
data("PROseq") # load included PROseq data
data("txs_dm6_chr4") # load included transcripts

txs_dm6_chr4

#--------------------------------------------------#
# get the top 50\% of transcripts by signal
#--------------------------------------------------#

subsetRegionsBySignal(txs_dm6_chr4, PROseq)

#--------------------------------------------------#
# get the middle 50\% of transcripts by signal
#--------------------------------------------------#

subsetRegionsBySignal(txs_dm6_chr4, PROseq, quantiles = c(0.25, 0.75))

#--------------------------------------------------#
# get the top 10\% of transcripts by signal, and sort them by highest signal
#--------------------------------------------------#

subsetRegionsBySignal(txs_dm6_chr4, PROseq,
                      quantiles = c(0.9, 1),
                      order.by.rank = TRUE)
}
\seealso{
\code{\link[BRGenomics:getCountsByRegion]{getCountsByRegion}}
}
\author{
Mike DeBerardine
}
