% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roi_functions.R
\name{subsetRegionsBySignal}
\alias{subsetRegionsBySignal}
\title{Subset regions of interest by quantiles of overlapping signal}
\usage{
subsetRegionsBySignal(
  regions.gr,
  dataset.gr,
  quantiles = c(0.5, 1),
  field = "score",
  order.by.rank = FALSE,
  density = FALSE,
  keep.signal = FALSE
)
}
\arguments{
\item{regions.gr}{A GRanges object containing regions of interest.}

\item{dataset.gr}{A GRanges object in which signal is contained in metadata
(typically in the "score" field).}

\item{quantiles}{A value pair giving the lower quantile and upper quantile of
regions to keep. Regions with signal quantiles below the lower quantile are
removed, and likewise for regions with signal quantiles above the upper
quantile. Quantiles must be in range \code{(0, 1)}. An empty GRanges object
is returned if the lower quantile is set to \code{1} or if the upper
quantile is set to \code{0}.}

\item{field}{The metadata field of \code{dataset.gr} to be counted, typically
"score".}

\item{order.by.rank}{If \code{TRUE}, the output regions are sorted based on
the amount of overlapping signal (in decreasing order). If \code{FALSE}
(the default), genes are sorted by their positions.}

\item{density}{A logical indicating whether signal counts should be
normalized to the width (chromosomal length) of ranges in
\code{regions.gr}. By default, no length normalization is performed.}

\item{keep.signal}{Logical indicating if signal counts should be kept. If set
to \code{TRUE}, the signal for each range (length-normalized if
\code{density = TRUE}) are kept as a new \code{Signal} metadata column in
the output GRanges object.}
}
\value{
A GRanges object of length \code{length(regions.gr) * (upper_quantile
  - lower_quantile)}.
}
\description{
A convenience function to subset regions of interest by the
  amount of signal they contain, according to their quantile (i.e. their
  signal ranks).
}
\examples{
data("PROseq") # load included PROseq data
data("txs_dm6_chr4") # load included transcripts

txs_dm6_chr4

#--------------------------------------------------#
# get the top 50\% of transcripts by signal
#--------------------------------------------------#

subsetRegionsBySignal(txs_dm6_chr4, PROseq)

#--------------------------------------------------#
# get the middle 50\% of transcripts by signal
#--------------------------------------------------#

subsetRegionsBySignal(txs_dm6_chr4, PROseq, quantiles = c(0.25, 0.75))

#--------------------------------------------------#
# get the top 10\% of transcripts by signal, and sort them by highest signal
#--------------------------------------------------#

subsetRegionsBySignal(txs_dm6_chr4, PROseq, quantiles = c(0.9, 1),
                      order.by.rank = TRUE)

#--------------------------------------------------#
# remove the most extreme 10\% of regions, and keep scores
#--------------------------------------------------#

subsetRegionsBySignal(txs_dm6_chr4, PROseq, quantiles = c(0.05, 0.95),
                      keep.signal = TRUE)
}
\seealso{
\code{\link[BRGenomics:getCountsByRegions]{getCountsByRegions}}
}
\author{
Mike DeBerardine
}
