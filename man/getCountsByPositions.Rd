% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signal_counting.R
\name{getCountsByPositions}
\alias{getCountsByPositions}
\title{Get signal counts at each position within regions of interest}
\usage{
getCountsByPositions(
  dataset.gr,
  regions.gr,
  binsize = 1,
  FUN = sum,
  simplify.multi.widths = c("list", "pad 0", "pad NA"),
  field = "score",
  ncores = detectCores()
)
}
\arguments{
\item{dataset.gr}{A GRanges object in which signal is contained in metadata
(typically in the "score" field).}

\item{regions.gr}{A GRanges object containing all the regions of interest.}

\item{binsize}{Size of bins (in bp) to use for counting within each range of
\code{regions.gr}. Note that counts will \emph{not} be length-normalized.}

\item{FUN}{If \code{binsize > 1}, the function used to aggregate the
signal within each bin. By default, the signal is summed, but any function
operating on a numeric vector can be used.}

\item{simplify.multi.widths}{A string indicating the output format if the
ranges in \code{regions.gr} have variable widths. Default = \code{"list"}.
See details below.}

\item{field}{The metadata field of \code{dataset.gr} to be counted. If
\code{length(field) > 1}, the output is a list whose elements contain the
output for generated each field.}

\item{ncores}{Multiple cores can only be used if \code{length(field) > 1}.}
}
\description{
Generate a matrix containing a row for each region of interest, and
columns for each position (each base if \code{binsize = 1}) within each
region.
}
\details{
If the widths of all ranges in \code{regions.gr} are equal, a matrix
  is returned containing a row for each range in \code{regions.gr}, and a
  column for each bin. For input \code{regions.gr} with varying widths,
  setting \code{simplify.multi.widths = "list"} will output a list of
  variable-length vectors, with each vector corresponding to an input region.
  If \code{simplify.multi.widths = "pad 0"} or \code{"pad NA"}, the output
  is a matrix containing a row for each range in \code{regions.gr}, and a
  column for each position in each range. The number of columns is determined
  by the largest range in \code{regions.gr}, and columns corresponding to
  positions outside of each range are either set to \code{0} or \code{NA},
  depending on the argument.
}
\examples{
data("PROseq") # load included PROseq data
data("txs_dm6_chr4") # load included transcripts

#--------------------------------------------------#
# counts from 0 to 50 bp after the TSS
#--------------------------------------------------#

txs_pr <- promoters(txs_dm6_chr4, 0, 50) # first 50 bases
countsmat <- getCountsByPositions(PROseq, txs_pr)
countsmat[10:15, 41:50] # show only 41-50 bp after TSS

#--------------------------------------------------#
# redo with 10 bp bins from 0 to 100
#--------------------------------------------------#

# column 5 is sums of rows shown above

txs_pr <- promoters(txs_dm6_chr4, 0, 100)
countsmat <- getCountsByPositions(PROseq, txs_pr, binsize = 10)
countsmat[10:15, ]

#--------------------------------------------------#
# same as the above, but with the average signal in each bin
#--------------------------------------------------#

countsmat <- getCountsByPositions(PROseq, txs_pr, binsize = 10, FUN = mean)
countsmat[10:15, ]

#--------------------------------------------------#
# standard deviation of signal in each bin
#--------------------------------------------------#

countsmat <- getCountsByPositions(PROseq, txs_pr, binsize = 10, FUN = sd)
round(countsmat[10:15, ], 2)
}
\seealso{
\code{\link[BRGenomics:getCountsByRegions]{getCountsByRegions}}
}
\author{
Mike DeBerardine
}
