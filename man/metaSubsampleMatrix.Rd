% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap_counts.R
\name{metaSubsampleMatrix}
\alias{metaSubsampleMatrix}
\title{Iterative Subsampling for Metaplotting (On Count Matrices)}
\usage{
metaSubsampleMatrix(
  counts.mat,
  binsize = 1,
  first.output.xval = 1,
  sample.name = deparse(substitute(counts.mat)),
  n.iter = 1000,
  prop.sample = 0.1,
  lower = 0.125,
  upper = 0.875,
  NF = 1,
  ncores = detectCores()
)
}
\arguments{
\item{counts.mat}{A matrix of signal counts in which rows are regions of
interest and columns are sites/bins in each region.}

\item{binsize}{The size of bin (number of columns, e.g. basepairs) to use for
metaplotting. Especially important for metaplots over large/sparse regions.}

\item{first.output.xval}{The relative start position of the first bin, e.g.
if regions.gr begins at 50 bases upstream of the TSS, set
\code{first.output.xval = -50}. This number only affects the x-values that
are returned, which are provided as a convenience.}

\item{sample.name}{Defaults to the name of \code{dataset.gr}.}

\item{n.iter}{Number of random subsampling iterations to perform. Default is
1000.}

\item{prop.sample}{The proportion of rows to subsample in each iteration.
The default is 0.1.}

\item{lower}{The lower quantile of subsampled signal means to return. The
default is 0.125 (12.5th percentile).}

\item{upper}{The upper quantile of subsampled signal means to return. The
default is 0.875 (85.5th percentile).}

\item{NF}{Optional normalization factor by which to multiply the counts.}

\item{ncores}{Number of cores to use for computations.}
}
\value{
Dataframe containing x-values, means, lower quantiles, upper
  quantiles, and the sample name (as a convenience for row-binding multiple
  of these dataframes).
}
\description{
In the most general sense, this function performs iterations of randomly
subsampling rows of a matrix, and returns a summary of mean values calculated
for each column. The typical application is for generating metaplots, with
the typical input being a matrix in which each row is a gene or other region
of interest, each column is a position within that gene (either a specific
basepair or a bin), and element values are signal (e.g. read counts) within
those positions.
}
\examples{
data("PROseq") # load included PROseq data
data("txs_dm6_chr4") # load included transcripts

# for each transcript, use promoter-proximal region from TSS to +100
pr <- promoters(txs_dm6_chr4, 0, 100)

# generate a matrix of counts in each region
countsmat <- getCountsByPositions(PROseq, pr)
dim(countsmat)

#--------------------------------------------------#
# bootstrap average signal in 10 bp bins across all transcripts
#--------------------------------------------------#

set.seed(11)
df <- metaSubsampleMatrix(countsmat, binsize = 10, sample.name = "PROseq")
df[1:10, ]

#--------------------------------------------------#
# the same, using a normalization factor, and changing the x-values
#--------------------------------------------------#

set.seed(11)
df <- metaSubsampleMatrix(countsmat, binsize = 10, first.output.xval = 0,
                          NF = 0.75, sample.name = "PROseq")
df[1:10, ]
}
\seealso{
\code{\link[BRGenomics:metaSubsample]{metaSubsample}},
  \code{\link[BRGenomics:getCountsByPositions]{getCountsByPositions}}
}
\author{
Mike DeBerardine
}
